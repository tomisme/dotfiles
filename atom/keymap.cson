'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  ']': 'cursor-history:next-within-editor'
  '[': 'cursor-history:prev-within-editor'
  'ctrl-]': 'cursor-history:next'
  'ctrl-[': 'cursor-history:prev'
  'U': 'core:redo'
  'ctrl-c': 'unset!'
  'ctrl-t': 'fuzzy-finder:toggle-file-finder'
  'ctrl-f': 'find-and-replace:show'

'atom-text-editor.vim-mode-plus.autocomplete-active':
  'enter': 'editor:newline'

'atom-text-editor[data-grammar~="clojure"]':
  'enter' : 'lisp-paredit:newline'

'atom-text-editor[data-grammar~="clojure"].vim-mode-plus:not(.insert-mode)':
  'm': 'lisp-paredit:expand-selection'

# 'atom-text-editor.vim-mode-plus.normal-mode[data-grammar="source clojure"]':
#   'g f':          'chlorine:go-to-var-definition'
#   'ctrl-d':       'chlorine:doc-for-var'
#   'space c':      'chlorine:connect-clojure-socket-repl'
#   'space l':      'chlorine:clear-console'
#   'shift-enter':  'chlorine:evaluate-block'
#   'ctrl-enter':   'chlorine:evaluate-top-block'
#   'space space':  'inline-results:clear-all'
#   'space x':      'chlorine:run-tests-in-ns'
#   'space t':      'chlorine:run-test-for-var'
#
# 'atom-text-editor.vim-mode-plus.insert-mode[data-grammar="source clojure"]':
#   'shift-enter': 'chlorine:evaluate-block'
#   'ctrl-enter': 'chlorine:evaluate-top-block'
